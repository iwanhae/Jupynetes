// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "message", Type: field.TypeString, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:        "events",
		Columns:     EventsColumns,
		PrimaryKey:  []*schema.Column{EventsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ServersColumns holds the columns for the "servers" table.
	ServersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "template", Type: field.TypeString},
		{Name: "variables", Type: field.TypeJSON},
		{Name: "ip", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "cpu", Type: field.TypeInt},
		{Name: "memory", Type: field.TypeInt},
		{Name: "nvidia_gpu", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "event_server", Type: field.TypeInt, Nullable: true},
	}
	// ServersTable holds the schema information for the "servers" table.
	ServersTable = &schema.Table{
		Name:       "servers",
		Columns:    ServersColumns,
		PrimaryKey: []*schema.Column{ServersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "servers_events_server",
				Columns: []*schema.Column{ServersColumns[11]},

				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TemplatesColumns holds the columns for the "templates" table.
	TemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "template", Type: field.TypeString, SchemaType: map[string]string{"mysql": "longtext"}},
		{Name: "variables", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// TemplatesTable holds the schema information for the "templates" table.
	TemplatesTable = &schema.Table{
		Name:        "templates",
		Columns:     TemplatesColumns,
		PrimaryKey:  []*schema.Column{TemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeString, Unique: true},
		{Name: "user_pw", Type: field.TypeString},
		{Name: "quota_instance", Type: field.TypeInt},
		{Name: "quota_cpu", Type: field.TypeInt},
		{Name: "quota_memory", Type: field.TypeInt},
		{Name: "quota_nvidia_gpu", Type: field.TypeInt},
		{Name: "quota_storage", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EventUserColumns holds the columns for the "event_user" table.
	EventUserColumns = []*schema.Column{
		{Name: "event_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// EventUserTable holds the schema information for the "event_user" table.
	EventUserTable = &schema.Table{
		Name:       "event_user",
		Columns:    EventUserColumns,
		PrimaryKey: []*schema.Column{EventUserColumns[0], EventUserColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "event_user_event_id",
				Columns: []*schema.Column{EventUserColumns[0]},

				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "event_user_user_id",
				Columns: []*schema.Column{EventUserColumns[1]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ServerTemplateFromColumns holds the columns for the "server_template_from" table.
	ServerTemplateFromColumns = []*schema.Column{
		{Name: "server_id", Type: field.TypeInt},
		{Name: "template_id", Type: field.TypeInt},
	}
	// ServerTemplateFromTable holds the schema information for the "server_template_from" table.
	ServerTemplateFromTable = &schema.Table{
		Name:       "server_template_from",
		Columns:    ServerTemplateFromColumns,
		PrimaryKey: []*schema.Column{ServerTemplateFromColumns[0], ServerTemplateFromColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "server_template_from_server_id",
				Columns: []*schema.Column{ServerTemplateFromColumns[0]},

				RefColumns: []*schema.Column{ServersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "server_template_from_template_id",
				Columns: []*schema.Column{ServerTemplateFromColumns[1]},

				RefColumns: []*schema.Column{TemplatesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserServersColumns holds the columns for the "user_servers" table.
	UserServersColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "server_id", Type: field.TypeInt},
	}
	// UserServersTable holds the schema information for the "user_servers" table.
	UserServersTable = &schema.Table{
		Name:       "user_servers",
		Columns:    UserServersColumns,
		PrimaryKey: []*schema.Column{UserServersColumns[0], UserServersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "user_servers_user_id",
				Columns: []*schema.Column{UserServersColumns[0]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "user_servers_server_id",
				Columns: []*schema.Column{UserServersColumns[1]},

				RefColumns: []*schema.Column{ServersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserTemplatesColumns holds the columns for the "user_templates" table.
	UserTemplatesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "template_id", Type: field.TypeInt},
	}
	// UserTemplatesTable holds the schema information for the "user_templates" table.
	UserTemplatesTable = &schema.Table{
		Name:       "user_templates",
		Columns:    UserTemplatesColumns,
		PrimaryKey: []*schema.Column{UserTemplatesColumns[0], UserTemplatesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "user_templates_user_id",
				Columns: []*schema.Column{UserTemplatesColumns[0]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "user_templates_template_id",
				Columns: []*schema.Column{UserTemplatesColumns[1]},

				RefColumns: []*schema.Column{TemplatesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EventsTable,
		ServersTable,
		TemplatesTable,
		UsersTable,
		EventUserTable,
		ServerTemplateFromTable,
		UserServersTable,
		UserTemplatesTable,
	}
)

func init() {
	ServersTable.ForeignKeys[0].RefTable = EventsTable
	EventUserTable.ForeignKeys[0].RefTable = EventsTable
	EventUserTable.ForeignKeys[1].RefTable = UsersTable
	ServerTemplateFromTable.ForeignKeys[0].RefTable = ServersTable
	ServerTemplateFromTable.ForeignKeys[1].RefTable = TemplatesTable
	UserServersTable.ForeignKeys[0].RefTable = UsersTable
	UserServersTable.ForeignKeys[1].RefTable = ServersTable
	UserTemplatesTable.ForeignKeys[0].RefTable = UsersTable
	UserTemplatesTable.ForeignKeys[1].RefTable = TemplatesTable
}
