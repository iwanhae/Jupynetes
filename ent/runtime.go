// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/iwanhae/Jupynetes/ent/event"
	"github.com/iwanhae/Jupynetes/ent/schema"
	"github.com/iwanhae/Jupynetes/ent/server"
	"github.com/iwanhae/Jupynetes/ent/template"
	"github.com/iwanhae/Jupynetes/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescMessage is the schema descriptor for message field.
	eventDescMessage := eventFields[0].Descriptor()
	// event.DefaultMessage holds the default value on creation for the message field.
	event.DefaultMessage = eventDescMessage.Default.(string)
	// eventDescCreatedAt is the schema descriptor for created_at field.
	eventDescCreatedAt := eventFields[1].Descriptor()
	// event.DefaultCreatedAt holds the default value on creation for the created_at field.
	event.DefaultCreatedAt = eventDescCreatedAt.Default.(func() time.Time)
	serverFields := schema.Server{}.Fields()
	_ = serverFields
	// serverDescCreatedAt is the schema descriptor for created_at field.
	serverDescCreatedAt := serverFields[8].Descriptor()
	// server.DefaultCreatedAt holds the default value on creation for the created_at field.
	server.DefaultCreatedAt = serverDescCreatedAt.Default.(func() time.Time)
	templateFields := schema.Template{}.Fields()
	_ = templateFields
	// templateDescCreatedAt is the schema descriptor for created_at field.
	templateDescCreatedAt := templateFields[4].Descriptor()
	// template.DefaultCreatedAt holds the default value on creation for the created_at field.
	template.DefaultCreatedAt = templateDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescQuotaInstance is the schema descriptor for quota_instance field.
	userDescQuotaInstance := userFields[2].Descriptor()
	// user.DefaultQuotaInstance holds the default value on creation for the quota_instance field.
	user.DefaultQuotaInstance = userDescQuotaInstance.Default.(int)
	// userDescQuotaCPU is the schema descriptor for quota_cpu field.
	userDescQuotaCPU := userFields[3].Descriptor()
	// user.DefaultQuotaCPU holds the default value on creation for the quota_cpu field.
	user.DefaultQuotaCPU = userDescQuotaCPU.Default.(int)
	// userDescQuotaMemory is the schema descriptor for quota_memory field.
	userDescQuotaMemory := userFields[4].Descriptor()
	// user.DefaultQuotaMemory holds the default value on creation for the quota_memory field.
	user.DefaultQuotaMemory = userDescQuotaMemory.Default.(int)
	// userDescQuotaNvidiaGpu is the schema descriptor for quota_nvidia_gpu field.
	userDescQuotaNvidiaGpu := userFields[5].Descriptor()
	// user.DefaultQuotaNvidiaGpu holds the default value on creation for the quota_nvidia_gpu field.
	user.DefaultQuotaNvidiaGpu = userDescQuotaNvidiaGpu.Default.(int)
	// userDescQuotaStorage is the schema descriptor for quota_storage field.
	userDescQuotaStorage := userFields[6].Descriptor()
	// user.DefaultQuotaStorage holds the default value on creation for the quota_storage field.
	user.DefaultQuotaStorage = userDescQuotaStorage.Default.(int)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[7].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
