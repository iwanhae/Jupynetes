[{"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/App.tsx":"1","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/Instance.js":"2","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/InstanceList.js":"3","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Dashboard.tsx":"4","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/ChangePassword/ChangePassword.tsx":"5","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/CreateInstance/CreateInstance.tsx":"6","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/index.tsx":"7","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Login/Components/LoginForm.js":"8","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Login/Login.js":"9"},{"size":651,"mtime":1609487673115,"results":"10","hashOfConfig":"11"},{"size":2287,"mtime":1609436864640,"results":"12","hashOfConfig":"11"},{"size":1271,"mtime":1609484673419,"results":"13","hashOfConfig":"11"},{"size":1167,"mtime":1609484571989,"results":"14","hashOfConfig":"11"},{"size":4343,"mtime":1609483032221,"results":"15","hashOfConfig":"11"},{"size":3625,"mtime":1609486237383,"results":"16","hashOfConfig":"11"},{"size":743,"mtime":1609487438913,"results":"17","hashOfConfig":"11"},{"size":2802,"mtime":1609487645452,"results":"18","hashOfConfig":"11"},{"size":809,"mtime":1609436864646,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wdxlzr",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/App.tsx",["44"],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/Instance.js",["45"],"import React, { Component } from 'react'\nimport { Card, Row, Col, Button} from 'antd';\n\nconst gridStyle = {\n  backgorundColor: 'yellow',\n  width: \"33%\",\n  textAlign: \"center\"\n};\n\nconst infoStyle = {\n  textAlign: \"left\",\n  margin: \"50px\",\n};\n\nconst infoBodyStyle = {\n  backgorundColor: 'rgba(255, 255, 0, 1)'\n};\n\nconst style = { background: '#0092ff', padding: '8px 0' };\n\nconst statusStyle={\n    height: \"25px\",\n    width: \"25px\",\n    backgroundColor: \"#F00\",\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n}\n\nexport default class Instance extends Component {\n    render() {\n        return (\n            <>\n                <Card.Grid style={gridStyle}>\n                    <Card title=\"사과서버\" >\n                        <Card extra={<a>정보수정</a>} style={infoStyle} bodyStyle={infoBodyStyle}>\n                            <p>언제생성</p>\n                            <p>몇일째 구동중</p>\n                            <p>각종 잡다한 세부정보</p>\n                            <p>구동중인 이미지</p>\n                        </Card>\n                        <Row gutter={16}>\n                            <Col className=\"gutter-row\" span={6}>\n                                <div style={style}>\n                                    <span class=\"dot\" style={statusStyle}></span>\n                                </div>\n                            </Col>\n                            <Col className=\"gutter-row\" span={6}>\n                                <div style={style}>\n                                    <Button danger>삭제</Button>\n                                </div>\n                            </Col>\n                            <Col className=\"gutter-row\" span={6}>\n                                <div style={style}>\n                                    <Button danger>재시작</Button>\n                                </div>\n                            </Col>\n                            <Col className=\"gutter-row\" span={6}>\n                                <div style={style}>\n                                    <Button danger>접속</Button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Card.Grid>\n            </>\n        )\n    }\n}","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/InstanceList.js",["46"],"import React, { Component } from 'react'\nimport { Button, Card, Row, Col} from 'antd';\nimport Instance from './Instance.js';\nimport CreateInstance from '../../CreateInstance/CreateInstance';\n\nexport default class InstanceList extends Component {\n    render() {\n        return (\n            <>\n                <div id=\"test\">\n                    <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                </div>\n                <div id=\"test\">\n                    <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                </div>\n                <Row gutter={16}>\n                    <Col className=\"gutter-row\" span={6}>\n                    </Col>\n                    <Col className=\"gutter-row\" span={6}>\n                    </Col>\n                    <Col className=\"gutter-row\" span={6}>\n                    </Col>\n                    <Col className=\"gutter-row\" span={6}>\n                        <CreateInstance></CreateInstance>\n                    </Col>\n                </Row>\n                <Card title=\"내 인스턴스 목록\">\n                    <Instance/>\n                    <Instance/>\n                    <Instance/>\n                    <Instance/>\n                    <Instance/>\n                </Card>\n            </>\n        )\n    }\n}\n","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Dashboard.tsx",["47","48"],"\n\nimport React, { Component } from 'react'\nimport 'antd/dist/antd.css';\nimport '../../index.css';\nimport './Dashboard.less';\nimport InstanceList from './Components/InstanceList.js';\nimport ChangePassword from '../ChangePassword/ChangePassword';\nimport { Layout, Button, Row, Col} from 'antd';\nimport CSS from 'csstype';\n\nconst { Header, Footer, Content } = Layout;\nconst mypageStyle: CSS.Properties ={\n    margin: '0 auto',\n    float: 'right',\n    marginRight: '5px'\n}\n\n\nconst Dashboard = () => {\n    return (\n        <>\n            <Layout className=\"layout\">\n                <Header>\n                <div className=\"logo\" />\n                  <Row style={mypageStyle}>\n                    <Col span={12}>\n                      <ChangePassword></ChangePassword>\n                    </Col>\n                    <Col span={12}>\n                      <Button danger >로그아웃</Button>\n                    </Col>\n                  </Row>\n                </Header>\n                <InstanceList/>\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n            </Layout>\n        </>\n    );\n}\n\nexport default Dashboard;","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/ChangePassword/ChangePassword.tsx",["49","50"],"\n\nimport React, { Component } from 'react'\nimport 'antd/dist/antd.css';\nimport '../../index.css';\nimport { Button, Modal, Form, Input} from 'antd';\nimport CSS from 'csstype';\n\nconst mypageStyle: CSS.Properties ={\n    margin: '1rem',\n    float: 'right',\n}\n\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 6,\n    span: 12,\n  },\n};\n\nconst onFinish = (values: String) => {\n    console.log('Success:', values);\n};\n\nconst onFinishFailed = () => {\n};\n\nconst ChangePassword = () => {\n\n    const [visible, setVisible] = React.useState(false);\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\n    const [modalText, setModalText] = React.useState('Content of the modal');\n\n    const showModal = () => {\n      setVisible(true);\n    };\n\n    const handleOk = () => {\n      setModalText('The modal will be closed after two seconds');\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setConfirmLoading(false);\n      }, 2000);\n    };\n\n    const handleCancel = () => {\n      console.log('Clicked cancel button');\n      setVisible(false);\n    };\n\n    return (\n        <div>\n                  <Button danger style={mypageStyle} onClick={showModal}>비밀번호수정</Button>\n                  <Modal\n                    title=\"비밀번호 수정\"\n                    visible={visible}\n                    onOk={handleOk}\n                    confirmLoading={confirmLoading}\n                    onCancel={handleCancel}\n                  >\n                          <Form\n                              {...layout}\n                              name=\"basic\"\n                              initialValues={{\n                                  remember: true,\n                              }}\n                              onFinish={onFinish}\n                              onFinishFailed={onFinishFailed}\n                          >\n                            <Form.Item\n                            label=\"아이디\"\n                            name=\"username\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                            ]}>\n                            <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"기존 비밀번호\"\n                                name=\"passwordOriginal\"\n                                rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                                ]}>\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"변경할 비밀번호\"\n                                name=\"passwordNew\"\n                                rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                                ]}>\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"비밀번호 재입력\"\n                                name=\"passwordRetype\"\n                                rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                                ]}>\n                                <Input.Password />\n                            </Form.Item>\n\n                            <Form.Item {...tailLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n                                </Button>\n                            </Form.Item>\n                    </Form>\n\n\n                  </Modal>\n        </div>\n    );\n}\n\nexport default ChangePassword;","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/CreateInstance/CreateInstance.tsx",["51","52"],"\n\nimport React, { Component } from 'react'\nimport 'antd/dist/antd.css';\nimport '../../index.css';\n// import './Dashboard.less';\nimport { Button, Modal, Form, Input} from 'antd';\nimport CSS from 'csstype';\n\nconst mypageStyle: CSS.Properties ={\n    margin: '1rem',\n    float: 'right',\n}\n\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 6,\n    span: 12,\n  },\n};\n\nconst onFinish = (values: String) => {\n    console.log('Success:', values);\n};\n\nconst onFinishFailed = () => {\n};\n\nconst CreateInstance = () => {\n\n    const [visible, setVisible] = React.useState(false);\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\n    const [modalText, setModalText] = React.useState('Content of the modal');\n\n    const showModal = () => {\n      setVisible(true);\n    };\n\n    const handleOk = () => {\n      setModalText('The modal will be closed after two seconds');\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setConfirmLoading(false);\n      }, 2000);\n    };\n\n    const handleCancel = () => {\n      console.log('Clicked cancel button');\n      setVisible(false);\n    };\n\n    return (\n        <>\n          <Button danger style={mypageStyle} onClick={showModal}>인스턴스생성</Button>\n            <Modal\n              title=\"인스턴스 생성\"\n              visible={visible}\n              onOk={handleOk}\n              confirmLoading={confirmLoading}\n              onCancel={handleCancel}\n            >\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                <Form.Item\n                label=\"아이디\"\n                name=\"username\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                },\n                ]}>\n                <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"기존 비밀번호\"\n                    name=\"passwordOriginal\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                    ]}>\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item\n                    label=\"변경할 비밀번호\"\n                    name=\"passwordNew\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                    ]}>\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item\n                    label=\"비밀번호 재입력\"\n                    name=\"passwordRetype\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                    ]}>\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                    </Button>\n                </Form.Item>\n              </Form>\n            </Modal>\n        </>\n    );\n}\n\nexport default CreateInstance;","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/index.tsx",["53","54","55","56","57","58","59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Redirect, Route, Router, Switch } from 'react-router';\nimport Login from './pages/Login/Login';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport { createBrowserHistory } from \"history\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Login/Components/LoginForm.js",["60"],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Login/Login.js",["61"],{"ruleId":"62","severity":1,"message":"63","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":35,"column":38,"nodeType":"68","endLine":35,"endColumn":41},{"ruleId":"69","severity":1,"message":"63","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"70","line":3,"column":17,"nodeType":"64","messageId":"65","endLine":3,"endColumn":26},{"ruleId":"62","severity":1,"message":"71","line":12,"column":25,"nodeType":"64","messageId":"65","endLine":12,"endColumn":32},{"ruleId":"62","severity":1,"message":"70","line":3,"column":17,"nodeType":"64","messageId":"65","endLine":3,"endColumn":26},{"ruleId":"62","severity":1,"message":"72","line":40,"column":12,"nodeType":"64","messageId":"65","endLine":40,"endColumn":21},{"ruleId":"62","severity":1,"message":"70","line":3,"column":17,"nodeType":"64","messageId":"65","endLine":3,"endColumn":26},{"ruleId":"62","severity":1,"message":"72","line":41,"column":12,"nodeType":"64","messageId":"65","endLine":41,"endColumn":21},{"ruleId":"62","severity":1,"message":"73","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":18},{"ruleId":"62","severity":1,"message":"74","line":6,"column":20,"nodeType":"64","messageId":"65","endLine":6,"endColumn":25},{"ruleId":"62","severity":1,"message":"75","line":6,"column":27,"nodeType":"64","messageId":"65","endLine":6,"endColumn":33},{"ruleId":"62","severity":1,"message":"76","line":6,"column":35,"nodeType":"64","messageId":"65","endLine":6,"endColumn":41},{"ruleId":"62","severity":1,"message":"77","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":13},{"ruleId":"62","severity":1,"message":"78","line":8,"column":8,"nodeType":"64","messageId":"65","endLine":8,"endColumn":17},{"ruleId":"62","severity":1,"message":"79","line":11,"column":7,"nodeType":"64","messageId":"65","endLine":11,"endColumn":11},{"ruleId":"69","severity":1,"message":"80","line":2,"column":22,"nodeType":"64","messageId":"65","endLine":2,"endColumn":28},{"ruleId":"69","severity":1,"message":"81","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","'Content' is assigned a value but never used.","'modalText' is assigned a value but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'hist' is assigned a value but never used.","'Layout' is defined but never used.","'ReactDOM' is defined but never used."]