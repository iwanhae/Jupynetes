[{"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/App.tsx":"1","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/Instance.js":"2","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/InstanceList.js":"3","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Dashboard.tsx":"4","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/ChangePassword/ChangePassword.tsx":"5","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/CreateInstance/CreateInstance.tsx":"6"},{"size":238,"mtime":1609479217457,"results":"7","hashOfConfig":"8"},{"size":2287,"mtime":1609436864640,"results":"9","hashOfConfig":"8"},{"size":1410,"mtime":1609482669795,"results":"10","hashOfConfig":"8"},{"size":1368,"mtime":1609482267300,"results":"11","hashOfConfig":"8"},{"size":4373,"mtime":1609480950626,"results":"12","hashOfConfig":"8"},{"size":4373,"mtime":1609482709729,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1wdxlzr",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/App.tsx",["29"],"import React, { FC } from 'react';\nimport { Button } from 'antd';\nimport './App.css';\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\n\nconst App: FC = () => (\n  <div className=\"App\">\n    <Dashboard/>\n  </div>\n);\n\nexport default App;\n","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/Instance.js",["30"],"import React, { Component } from 'react'\nimport { Card, Row, Col, Button} from 'antd';\n\nconst gridStyle = {\n  backgorundColor: 'yellow',\n  width: \"33%\",\n  textAlign: \"center\"\n};\n\nconst infoStyle = {\n  textAlign: \"left\",\n  margin: \"50px\",\n};\n\nconst infoBodyStyle = {\n  backgorundColor: 'rgba(255, 255, 0, 1)'\n};\n\nconst style = { background: '#0092ff', padding: '8px 0' };\n\nconst statusStyle={\n    height: \"25px\",\n    width: \"25px\",\n    backgroundColor: \"#F00\",\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n}\n\nexport default class Instance extends Component {\n    render() {\n        return (\n            <>\n                <Card.Grid style={gridStyle}>\n                    <Card title=\"사과서버\" >\n                        <Card extra={<a>정보수정</a>} style={infoStyle} bodyStyle={infoBodyStyle}>\n                            <p>언제생성</p>\n                            <p>몇일째 구동중</p>\n                            <p>각종 잡다한 세부정보</p>\n                            <p>구동중인 이미지</p>\n                        </Card>\n                        <Row gutter={16}>\n                            <Col className=\"gutter-row\" span={6}>\n                                <div style={style}>\n                                    <span class=\"dot\" style={statusStyle}></span>\n                                </div>\n                            </Col>\n                            <Col className=\"gutter-row\" span={6}>\n                                <div style={style}>\n                                    <Button danger>삭제</Button>\n                                </div>\n                            </Col>\n                            <Col className=\"gutter-row\" span={6}>\n                                <div style={style}>\n                                    <Button danger>재시작</Button>\n                                </div>\n                            </Col>\n                            <Col className=\"gutter-row\" span={6}>\n                                <div style={style}>\n                                    <Button danger>접속</Button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Card.Grid>\n            </>\n        )\n    }\n}","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/InstanceList.js",["31"],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Dashboard.tsx",["32","33","34","35"],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/ChangePassword/ChangePassword.tsx",["36","37"],"\n\nimport React, { Component } from 'react'\nimport 'antd/dist/antd.css';\nimport '../../index.css';\n// import './Dashboard.less';\nimport { Button, Modal, Form, Input} from 'antd';\nimport CSS from 'csstype';\n\nconst mypageStyle: CSS.Properties ={\n    margin: '1rem',\n    float: 'right',\n}\n\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 6,\n    span: 12,\n  },\n};\n\nconst onFinish = (values: String) => {\n    console.log('Success:', values);\n};\n\nconst onFinishFailed = () => {\n};\n\nconst ChangePassword = () => {\n\n    const [visible, setVisible] = React.useState(false);\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\n    const [modalText, setModalText] = React.useState('Content of the modal');\n\n    const showModal = () => {\n      setVisible(true);\n    };\n\n    const handleOk = () => {\n      setModalText('The modal will be closed after two seconds');\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setConfirmLoading(false);\n      }, 2000);\n    };\n\n    const handleCancel = () => {\n      console.log('Clicked cancel button');\n      setVisible(false);\n    };\n\n    return (\n        <div>\n                  <Button danger style={mypageStyle} onClick={showModal}>비밀번호수정</Button>\n                  <Modal\n                    title=\"비밀번호 수정\"\n                    visible={visible}\n                    onOk={handleOk}\n                    confirmLoading={confirmLoading}\n                    onCancel={handleCancel}\n                  >\n                          <Form\n                              {...layout}\n                              name=\"basic\"\n                              initialValues={{\n                                  remember: true,\n                              }}\n                              onFinish={onFinish}\n                              onFinishFailed={onFinishFailed}\n                          >\n                            <Form.Item\n                            label=\"아이디\"\n                            name=\"username\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                            ]}>\n                            <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"기존 비밀번호\"\n                                name=\"passwordOriginal\"\n                                rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                                ]}>\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"변경할 비밀번호\"\n                                name=\"passwordNew\"\n                                rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                                ]}>\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"비밀번호 재입력\"\n                                name=\"passwordRetype\"\n                                rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                                ]}>\n                                <Input.Password />\n                            </Form.Item>\n\n                            <Form.Item {...tailLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n                                </Button>\n                            </Form.Item>\n                    </Form>\n\n\n                  </Modal>\n        </div>\n    );\n}\n\nexport default ChangePassword;","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/CreateInstance/CreateInstance.tsx",["38","39"],{"ruleId":"40","severity":1,"message":"41","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":16},{"ruleId":"44","severity":1,"message":"45","line":35,"column":38,"nodeType":"46","endLine":35,"endColumn":41},{"ruleId":"47","severity":1,"message":"41","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":16},{"ruleId":"40","severity":1,"message":"48","line":3,"column":17,"nodeType":"42","messageId":"43","endLine":3,"endColumn":26},{"ruleId":"40","severity":1,"message":"49","line":9,"column":32,"nodeType":"42","messageId":"43","endLine":9,"endColumn":37},{"ruleId":"40","severity":1,"message":"50","line":9,"column":39,"nodeType":"42","messageId":"43","endLine":9,"endColumn":43},{"ruleId":"40","severity":1,"message":"51","line":9,"column":45,"nodeType":"42","messageId":"43","endLine":9,"endColumn":50},{"ruleId":"40","severity":1,"message":"48","line":3,"column":17,"nodeType":"42","messageId":"43","endLine":3,"endColumn":26},{"ruleId":"40","severity":1,"message":"52","line":41,"column":12,"nodeType":"42","messageId":"43","endLine":41,"endColumn":21},{"ruleId":"40","severity":1,"message":"48","line":3,"column":17,"nodeType":"42","messageId":"43","endLine":3,"endColumn":26},{"ruleId":"40","severity":1,"message":"52","line":41,"column":12,"nodeType":"42","messageId":"43","endLine":41,"endColumn":21},"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","'Modal' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'modalText' is assigned a value but never used."]